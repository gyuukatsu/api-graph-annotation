[
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    },
    {
      "name": "SEC_Balance_Sheet",
      "description": "Retrieve the balance sheet of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "ticker",
          "type": "String",
          "description": "Publicly traded company's stock symbol",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "formtype",
          "type": "String",
          "description": "10-K = Annual Report (default) | 10-Q = Quarterly Report",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "filingorder",
          "type": "Number",
          "description": "Retrieve an older financial statement by specifying number of filings to go back. By default, the most recent filing is returned (filingOrder = 0).",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_name",
          "type": "str",
          "description": "Name of the filing"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_period",
          "type": "str",
          "description": "Reporting period"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (10-K or 10-Q)"
        },
        {
          "name": "filing_filingCount",
          "type": "float",
          "description": "Number of filings"
        },
        {
          "name": "result_CashAndCashEquivalentsAtCarryingValue",
          "type": "float",
          "description": "Value of cash and cash equivalents"
        },
        {
          "name": "result_ShortTermInvestments",
          "type": "float",
          "description": "Value of short-term investments"
        },
        {
          "name": "result_AccountsReceivableNetCurrent",
          "type": "float",
          "description": "Net value of current accounts receivable"
        },
        {
          "name": "result_InventoryNet",
          "type": "float",
          "description": "Net value of inventory"
        },
        {
          "name": "result_LongTermInvestments",
          "type": "float",
          "description": "Value of long-term investments"
        },
        {
          "name": "result_Goodwill",
          "type": "float",
          "description": "Value of goodwill"
        },
        {
          "name": "result_Assets",
          "type": "float",
          "description": "Total value of assets"
        },
        {
          "name": "result_AccountsPayableCurrent",
          "type": "float",
          "description": "Value of current accounts payable"
        },
        {
          "name": "result_LongTermDebtCurrent",
          "type": "float",
          "description": "Value of current long-term debt"
        },
        {
          "name": "result_Liabilities",
          "type": "float",
          "description": "Total value of liabilities"
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Quotes_By_Keyword",
      "description": "Searches for quotes based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up quotes.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the author's image."
        },
        {
          "name": "quoteText",
          "type": "str",
          "description": "Text of the quote."
        },
        {
          "name": "urls",
          "type": "str",
          "description": "URL of the book containing the quote."
        },
        {
          "name": "likes",
          "type": "str",
          "description": "Number of likes the quote has received."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "Alpha_Vantage_CURRENCY_EXCHANGE_RATE",
      "description": "Return the real time exchnage rate for any pair of digital currency.",
      "input_params": [
        {
          "name": "from_currency",
          "type": "String",
          "description": "The cryptocurrency you want to convert from",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "function",
          "type": "String",
          "description": "The function of your choice. (In this case CURRENCY_EXCHANGE_RATE)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "to_currency",
          "type": "String",
          "description": "The currency you want to convert to",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "From_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting from"
        },
        {
          "name": "From_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting from"
        },
        {
          "name": "To_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting to"
        },
        {
          "name": "To_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting to"
        },
        {
          "name": "Exchange Rate",
          "type": "str",
          "description": "The exchange rate between the two currencies"
        },
        {
          "name": "Last Refreshed",
          "type": "str",
          "description": "The last time the data was refreshed"
        },
        {
          "name": "Time Zone",
          "type": "str",
          "description": "The time zone of the data"
        },
        {
          "name": "Bid Price",
          "type": "str",
          "description": "The bid price for the currency exchange"
        },
        {
          "name": "Ask Price",
          "type": "str",
          "description": "The ask price for the currency exchange"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "Alpha_Vantage_CURRENCY_EXCHANGE_RATE",
      "description": "Return the real time exchnage rate for any pair of digital currency.",
      "input_params": [
        {
          "name": "from_currency",
          "type": "String",
          "description": "The cryptocurrency you want to convert from",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "function",
          "type": "String",
          "description": "The function of your choice. (In this case CURRENCY_EXCHANGE_RATE)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "to_currency",
          "type": "String",
          "description": "The currency you want to convert to",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "From_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting from"
        },
        {
          "name": "From_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting from"
        },
        {
          "name": "To_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting to"
        },
        {
          "name": "To_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting to"
        },
        {
          "name": "Exchange Rate",
          "type": "str",
          "description": "The exchange rate between the two currencies"
        },
        {
          "name": "Last Refreshed",
          "type": "str",
          "description": "The last time the data was refreshed"
        },
        {
          "name": "Time Zone",
          "type": "str",
          "description": "The time zone of the data"
        },
        {
          "name": "Bid Price",
          "type": "str",
          "description": "The bid price for the currency exchange"
        },
        {
          "name": "Ask Price",
          "type": "str",
          "description": "The ask price for the currency exchange"
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "Alpha_Vantage_CURRENCY_EXCHANGE_RATE",
      "description": "Return the real time exchnage rate for any pair of digital currency.",
      "input_params": [
        {
          "name": "from_currency",
          "type": "String",
          "description": "The cryptocurrency you want to convert from",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "function",
          "type": "String",
          "description": "The function of your choice. (In this case CURRENCY_EXCHANGE_RATE)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "to_currency",
          "type": "String",
          "description": "The currency you want to convert to",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "From_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting from"
        },
        {
          "name": "From_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting from"
        },
        {
          "name": "To_Currency Code",
          "type": "str",
          "description": "The code of the currency you are converting to"
        },
        {
          "name": "To_Currency Name",
          "type": "str",
          "description": "The name of the currency you are converting to"
        },
        {
          "name": "Exchange Rate",
          "type": "str",
          "description": "The exchange rate between the two currencies"
        },
        {
          "name": "Last Refreshed",
          "type": "str",
          "description": "The last time the data was refreshed"
        },
        {
          "name": "Time Zone",
          "type": "str",
          "description": "The time zone of the data"
        },
        {
          "name": "Bid Price",
          "type": "str",
          "description": "The bid price for the currency exchange"
        },
        {
          "name": "Ask Price",
          "type": "str",
          "description": "The ask price for the currency exchange"
        }
      ]
    },
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    },
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchRestaurants",
      "description": "Searches restaurants based on locationId and optionally by page number.",
      "input_params": [
        {
          "name": "locationId",
          "type": "String",
          "description": "Location ID obtained from Tripadvisor's Search Restaurant Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Optional. Page number for paginated results. Defaults to 1 if not specified.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "restaurantsId",
          "type": "str",
          "description": "Unique identifier for the restaurant."
        },
        {
          "name": "locationId",
          "type": "float",
          "description": "Location ID associated with the restaurant."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "averageRating",
          "type": "float",
          "description": "Average rating of the restaurant."
        },
        {
          "name": "userReviewCount",
          "type": "float",
          "description": "Number of user reviews for the restaurant."
        },
        {
          "name": "currentOpenStatusCategory",
          "type": "str",
          "description": "Category indicating the current open status (e.g., OPEN, CLOSED)."
        },
        {
          "name": "currentOpenStatusText",
          "type": "str",
          "description": "Text description of the current open status."
        },
        {
          "name": "priceTag",
          "type": "str",
          "description": "Price category of the restaurant (e.g., $$, $$$)."
        },
        {
          "name": "isDifferentGeo",
          "type": "bool",
          "description": "Indicates if the restaurant is in a different geographical location."
        },
        {
          "name": "parentGeoName",
          "type": "str",
          "description": "Name of the parent geographical location (e.g., city name)."
        },
        {
          "name": "distanceTo",
          "type": "float",
          "description": "Distance to the restaurant from the specified location, if available."
        },
        {
          "name": "awardInfo",
          "type": "str",
          "description": "Information about any awards received by the restaurant."
        },
        {
          "name": "isLocalChefItem",
          "type": "bool",
          "description": "Indicates if the restaurant offers local chef specialty items."
        },
        {
          "name": "isPremium",
          "type": "bool",
          "description": "Indicates if the restaurant is a premium listing."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Reviews",
      "description": "Fetches reviews for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of product reviews to return.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "number",
          "description": "A cursor to get the next set of results, it can be used for for paging purposes. Note: the cursor value for the next set of results is returned by this endpoint under data.cursor.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Only return reviews with user rating greater than the specified value.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "string",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The unique identifier of the review."
        },
        {
          "name": "review_title",
          "type": "str",
          "description": "The title of the review."
        },
        {
          "name": "review_author",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review."
        },
        {
          "name": "review_source_url",
          "type": "str",
          "description": "The URL of the source of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time of the review in UTC."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Offers",
      "description": "Fetches offers for a specific product.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product ID of the product for which to fetch offers.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "Number",
          "description": "The page to return. Each page contains offers from 10 different stores (potentially resulting in more than 10 offers).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return offers for.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "String",
          "description": "The language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The ID of the product for which offers are being fetched."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product for which offers are being fetched."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product for which offers are being fetched."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The photos of the product for which offers are being fetched."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product for which offers are being fetched."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product for which offers are being fetched."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page for which offers are being fetched."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page for which offers are being fetched."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specs page for which offers are being fetched."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page for which offers are being fetched."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews of the product for which offers are being fetched."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers of the product for which offers are being fetched."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_ID_By_Name",
      "description": "Retrieve the Spotify artist ID by providing the artist name.",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Artist name for which to retrieve the Spotify ID.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "artist_id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "url",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "image_url",
          "type": "str",
          "description": "URL of the artist's image."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_ID_By_Name",
      "description": "Retrieve the Spotify artist ID by providing the artist name.",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Artist name for which to retrieve the Spotify ID.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "artist_id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "url",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "image_url",
          "type": "str",
          "description": "URL of the artist's image."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Artist_Albums_Singles",
      "description": "Retrieve albums or singles released by an artist on Spotify.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve albums or singles.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "Enum",
          "description": "Type of release to retrieve. Defaults to 'album'. Use 'album' or 'single'. Note: 'appearsOn' type does not support pagination scraping.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "Number",
          "description": "Number of items to omit before returning results. Ignored if type is 'appearsOn'. Defaults to 0.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Max number of items to return per request. Ignored if type is 'appearsOn'. Defaults to 50.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the album or single."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the album or single."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of release, e.g., 'album'."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify album or single."
        },
        {
          "name": "date",
          "type": "str",
          "description": "Release date of the album or single in ISO 8601 format."
        },
        {
          "name": "trackCount",
          "type": "float",
          "description": "Number of tracks in the album. Null if type is 'single'."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_ID_By_Name",
      "description": "Retrieve the Spotify artist ID by providing the artist name.",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Artist name for which to retrieve the Spotify ID.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "artist_id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "url",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "image_url",
          "type": "str",
          "description": "URL of the artist's image."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_Get_Artist_ID_By_Name",
      "description": "Retrieve the Spotify artist ID by providing the artist name.",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Artist name for which to retrieve the Spotify ID.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "artist_id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "url",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "image_url",
          "type": "str",
          "description": "URL of the artist's image."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Artist_Albums_Singles",
      "description": "Retrieve albums or singles released by an artist on Spotify.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve albums or singles.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "Enum",
          "description": "Type of release to retrieve. Defaults to 'album'. Use 'album' or 'single'. Note: 'appearsOn' type does not support pagination scraping.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "Number",
          "description": "Number of items to omit before returning results. Ignored if type is 'appearsOn'. Defaults to 0.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Max number of items to return per request. Ignored if type is 'appearsOn'. Defaults to 50.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the album or single."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the album or single."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of release, e.g., 'album'."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify album or single."
        },
        {
          "name": "date",
          "type": "str",
          "description": "Release date of the album or single in ISO 8601 format."
        },
        {
          "name": "trackCount",
          "type": "float",
          "description": "Number of tracks in the album. Null if type is 'single'."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_Get_Artist_ID_By_Name",
      "description": "Retrieve the Spotify artist ID by providing the artist name.",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Artist name for which to retrieve the Spotify ID.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "artist_id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "url",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "image_url",
          "type": "str",
          "description": "URL of the artist's image."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    },
    {
      "name": "Spotify_Scraper_List_Artist_Albums_Singles",
      "description": "Retrieve albums or singles released by an artist on Spotify.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve albums or singles.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "Enum",
          "description": "Type of release to retrieve. Defaults to 'album'. Use 'album' or 'single'. Note: 'appearsOn' type does not support pagination scraping.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "Number",
          "description": "Number of items to omit before returning results. Ignored if type is 'appearsOn'. Defaults to 0.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Max number of items to return per request. Ignored if type is 'appearsOn'. Defaults to 50.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the album or single."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the album or single."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of release, e.g., 'album'."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify album or single."
        },
        {
          "name": "date",
          "type": "str",
          "description": "Release date of the album or single in ISO 8601 format."
        },
        {
          "name": "trackCount",
          "type": "float",
          "description": "Number of tracks in the album. Null if type is 'single'."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    },
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    },
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    },
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    },
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    },
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    },
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    },
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    },
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    },
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Tripadvisor_Search_Restaurant_Location",
      "description": "Fetches location details for restaurants based on the name of the location.",
      "input_params": [
        {
          "name": "query",
          "type": "String",
          "description": "Name of the location where the restaurant is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "message",
          "type": "str",
          "description": "Message providing additional information about the request."
        },
        {
          "name": "timestamp",
          "type": "float",
          "description": "Timestamp indicating when the response was generated."
        },
        {
          "name": "location_locationId",
          "type": "float",
          "description": "Unique identifier for the location."
        },
        {
          "name": "location_documentId",
          "type": "str",
          "description": "Document ID associated with the location."
        },
        {
          "name": "location_propertyId",
          "type": "float",
          "description": "Property ID associated with the location."
        },
        {
          "name": "location_localizedName",
          "type": "str",
          "description": "Localized name of the location."
        },
        {
          "name": "location_placeType",
          "type": "str",
          "description": "Type of place (e.g., CITY, TOWN)."
        },
        {
          "name": "location_latitude",
          "type": "float",
          "description": "Latitude coordinates of the location."
        },
        {
          "name": "location_longitude",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_isGeo",
          "type": "bool",
          "description": "Indicates if the location is geographically defined."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    },
    {
      "name": "Instagram_Info",
      "description": "Retrieve detailed information about an Instagram account, including contacts and account details.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g., mrbeast), user ID (e.g., 2278169415), or URL (e.g., instagram.com/mrbeast).",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "include_about",
          "type": "Boolean",
          "description": "Include 'About this account' information: country and date_joined (in about field). Default: false. Enabling this will cost one extra request.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "account_type",
          "type": "float",
          "description": "Type of the account (e.g., personal, business)."
        },
        {
          "name": "bio_links_url",
          "type": "str",
          "description": "Links in the biography of the account."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography text of the account."
        },
        {
          "name": "business_contact_method",
          "type": "str",
          "description": "Preferred method of contact for business inquiries."
        },
        {
          "name": "category",
          "type": "str",
          "description": "Category of the account (e.g., Public figure, Blogger)."
        },
        {
          "name": "external_url",
          "type": "str",
          "description": "External URL linked to the account."
        },
        {
          "name": "follower_count",
          "type": "float",
          "description": "Number of followers of the account."
        },
        {
          "name": "following_count",
          "type": "float",
          "description": "Number of accounts the user is following."
        },
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the account holder."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the Instagram account."
        },
        {
          "name": "is_business",
          "type": "bool",
          "description": "Boolean indicating if the account is a business account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the account is verified."
        },
        {
          "name": "profile_context",
          "type": "str",
          "description": "Context information about the profile."
        },
        {
          "name": "public_email",
          "type": "str",
          "description": "Public email associated with the account."
        },
        {
          "name": "public_phone_country_code",
          "type": "str",
          "description": "Country code of the public phone number."
        },
        {
          "name": "public_phone_number",
          "type": "str",
          "description": "Public phone number associated with the account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "List of upcoming events associated with the account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    },
    {
      "name": "Instagram_Followers",
      "description": "Retrieve the list of followers for an Instagram account.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of followers to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name if the follower."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the follower."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Boolean indicating if the follower's account is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the follower."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the follower."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    },
    {
      "name": "Instagram_Following",
      "description": "Retrieve the list of accounts followed by an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amount",
          "type": "Number",
          "description": "Minimum number of accounts to retrieve. Maximum: 1000. Default: 50. Note: costs one extra request for every 50 users requested (e.g. amount=100 costs 2 requests).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Name of the followed account."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the followed account."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the followed account is private"
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the followed account is verified"
        },
        {
          "name": "latest_reel_media",
          "type": "float",
          "description": "Number of latest reel media."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture of the followed account."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the followed account."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    },
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Balance_Sheet",
      "description": "Retrieve the balance sheet of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "ticker",
          "type": "String",
          "description": "Publicly traded company's stock symbol",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "formtype",
          "type": "String",
          "description": "10-K = Annual Report (default) | 10-Q = Quarterly Report",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "filingorder",
          "type": "Number",
          "description": "Retrieve an older financial statement by specifying number of filings to go back. By default, the most recent filing is returned (filingOrder = 0).",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_name",
          "type": "str",
          "description": "Name of the filing"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_period",
          "type": "str",
          "description": "Reporting period"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (10-K or 10-Q)"
        },
        {
          "name": "filing_filingCount",
          "type": "float",
          "description": "Number of filings"
        },
        {
          "name": "result_CashAndCashEquivalentsAtCarryingValue",
          "type": "float",
          "description": "Value of cash and cash equivalents"
        },
        {
          "name": "result_ShortTermInvestments",
          "type": "float",
          "description": "Value of short-term investments"
        },
        {
          "name": "result_AccountsReceivableNetCurrent",
          "type": "float",
          "description": "Net value of current accounts receivable"
        },
        {
          "name": "result_InventoryNet",
          "type": "float",
          "description": "Net value of inventory"
        },
        {
          "name": "result_LongTermInvestments",
          "type": "float",
          "description": "Value of long-term investments"
        },
        {
          "name": "result_Goodwill",
          "type": "float",
          "description": "Value of goodwill"
        },
        {
          "name": "result_Assets",
          "type": "float",
          "description": "Total value of assets"
        },
        {
          "name": "result_AccountsPayableCurrent",
          "type": "float",
          "description": "Value of current accounts payable"
        },
        {
          "name": "result_LongTermDebtCurrent",
          "type": "float",
          "description": "Value of current long-term debt"
        },
        {
          "name": "result_Liabilities",
          "type": "float",
          "description": "Total value of liabilities"
        }
      ]
    },
    {
      "name": "SEC_Financial_Statements_and_Disclosures",
      "description": "Retrieve financial statements and disclosures of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "cik",
          "type": "String",
          "description": "Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "accessionNumber",
          "type": "String",
          "description": "SEC Filing Identifier",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q)"
        },
        {
          "name": "filing_count",
          "type": "float",
          "description": "Number of sections in the filing"
        },
        {
          "name": "result_Id",
          "type": "str",
          "description": "Unique identifier for the section"
        },
        {
          "name": "result_HtmlFileName",
          "type": "str",
          "description": "HTML file name of the section"
        },
        {
          "name": "result_Url",
          "type": "str",
          "description": "URL to the section"
        },
        {
          "name": "result_Section",
          "type": "str",
          "description": "Type of section (e.g., Statement, Note)"
        },
        {
          "name": "result_Name",
          "type": "str",
          "description": "Name of the section (e.g., Consolidated Balance Sheets)"
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Balance_Sheet",
      "description": "Retrieve the balance sheet of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "ticker",
          "type": "String",
          "description": "Publicly traded company's stock symbol",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "formtype",
          "type": "String",
          "description": "10-K = Annual Report (default) | 10-Q = Quarterly Report",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "filingorder",
          "type": "Number",
          "description": "Retrieve an older financial statement by specifying number of filings to go back. By default, the most recent filing is returned (filingOrder = 0).",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_name",
          "type": "str",
          "description": "Name of the filing"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_period",
          "type": "str",
          "description": "Reporting period"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (10-K or 10-Q)"
        },
        {
          "name": "filing_filingCount",
          "type": "float",
          "description": "Number of filings"
        },
        {
          "name": "result_CashAndCashEquivalentsAtCarryingValue",
          "type": "float",
          "description": "Value of cash and cash equivalents"
        },
        {
          "name": "result_ShortTermInvestments",
          "type": "float",
          "description": "Value of short-term investments"
        },
        {
          "name": "result_AccountsReceivableNetCurrent",
          "type": "float",
          "description": "Net value of current accounts receivable"
        },
        {
          "name": "result_InventoryNet",
          "type": "float",
          "description": "Net value of inventory"
        },
        {
          "name": "result_LongTermInvestments",
          "type": "float",
          "description": "Value of long-term investments"
        },
        {
          "name": "result_Goodwill",
          "type": "float",
          "description": "Value of goodwill"
        },
        {
          "name": "result_Assets",
          "type": "float",
          "description": "Total value of assets"
        },
        {
          "name": "result_AccountsPayableCurrent",
          "type": "float",
          "description": "Value of current accounts payable"
        },
        {
          "name": "result_LongTermDebtCurrent",
          "type": "float",
          "description": "Value of current long-term debt"
        },
        {
          "name": "result_Liabilities",
          "type": "float",
          "description": "Total value of liabilities"
        }
      ]
    },
    {
      "name": "SEC_Filings",
      "description": "Retrieve recent SEC filings for a publicly traded company based on stock symbol or Central Index Key (CIK).",
      "input_params": [
        {
          "name": "identifier",
          "type": "String",
          "description": "Publicly traded company's stock symbol or Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_status",
          "type": "float",
          "description": "Response status"
        },
        {
          "name": "company_count",
          "type": "float",
          "description": "Number of filings returned"
        },
        {
          "name": "filings_name",
          "type": "str",
          "description": "Name of the report"
        },
        {
          "name": "filings_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filings_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filings_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q, 144)"
        },
        {
          "name": "filings_url",
          "type": "str",
          "description": "URL to the filing"
        },
        {
          "name": "filings_type",
          "type": "str",
          "description": "Type of data (e.g., filings)"
        },
        {
          "name": "filings_id",
          "type": "str",
          "description": "Unique identifier for the filing"
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Financial_Statements_and_Disclosures",
      "description": "Retrieve financial statements and disclosures of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "cik",
          "type": "String",
          "description": "Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "accessionNumber",
          "type": "String",
          "description": "SEC Filing Identifier",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q)"
        },
        {
          "name": "filing_count",
          "type": "float",
          "description": "Number of sections in the filing"
        },
        {
          "name": "result_Id",
          "type": "str",
          "description": "Unique identifier for the section"
        },
        {
          "name": "result_HtmlFileName",
          "type": "str",
          "description": "HTML file name of the section"
        },
        {
          "name": "result_Url",
          "type": "str",
          "description": "URL to the section"
        },
        {
          "name": "result_Section",
          "type": "str",
          "description": "Type of section (e.g., Statement, Note)"
        },
        {
          "name": "result_Name",
          "type": "str",
          "description": "Name of the section (e.g., Consolidated Balance Sheets)"
        }
      ]
    },
    {
      "name": "SEC_Balance_Sheet",
      "description": "Retrieve the balance sheet of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "ticker",
          "type": "String",
          "description": "Publicly traded company's stock symbol",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "formtype",
          "type": "String",
          "description": "10-K = Annual Report (default) | 10-Q = Quarterly Report",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "filingorder",
          "type": "Number",
          "description": "Retrieve an older financial statement by specifying number of filings to go back. By default, the most recent filing is returned (filingOrder = 0).",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_name",
          "type": "str",
          "description": "Name of the filing"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_period",
          "type": "str",
          "description": "Reporting period"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (10-K or 10-Q)"
        },
        {
          "name": "filing_filingCount",
          "type": "float",
          "description": "Number of filings"
        },
        {
          "name": "result_CashAndCashEquivalentsAtCarryingValue",
          "type": "float",
          "description": "Value of cash and cash equivalents"
        },
        {
          "name": "result_ShortTermInvestments",
          "type": "float",
          "description": "Value of short-term investments"
        },
        {
          "name": "result_AccountsReceivableNetCurrent",
          "type": "float",
          "description": "Net value of current accounts receivable"
        },
        {
          "name": "result_InventoryNet",
          "type": "float",
          "description": "Net value of inventory"
        },
        {
          "name": "result_LongTermInvestments",
          "type": "float",
          "description": "Value of long-term investments"
        },
        {
          "name": "result_Goodwill",
          "type": "float",
          "description": "Value of goodwill"
        },
        {
          "name": "result_Assets",
          "type": "float",
          "description": "Total value of assets"
        },
        {
          "name": "result_AccountsPayableCurrent",
          "type": "float",
          "description": "Value of current accounts payable"
        },
        {
          "name": "result_LongTermDebtCurrent",
          "type": "float",
          "description": "Value of current long-term debt"
        },
        {
          "name": "result_Liabilities",
          "type": "float",
          "description": "Total value of liabilities"
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Financial_Statements_and_Disclosures",
      "description": "Retrieve financial statements and disclosures of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "cik",
          "type": "String",
          "description": "Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "accessionNumber",
          "type": "String",
          "description": "SEC Filing Identifier",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q)"
        },
        {
          "name": "filing_count",
          "type": "float",
          "description": "Number of sections in the filing"
        },
        {
          "name": "result_Id",
          "type": "str",
          "description": "Unique identifier for the section"
        },
        {
          "name": "result_HtmlFileName",
          "type": "str",
          "description": "HTML file name of the section"
        },
        {
          "name": "result_Url",
          "type": "str",
          "description": "URL to the section"
        },
        {
          "name": "result_Section",
          "type": "str",
          "description": "Type of section (e.g., Statement, Note)"
        },
        {
          "name": "result_Name",
          "type": "str",
          "description": "Name of the section (e.g., Consolidated Balance Sheets)"
        }
      ]
    },
    {
      "name": "SEC_Filings",
      "description": "Retrieve recent SEC filings for a publicly traded company based on stock symbol or Central Index Key (CIK).",
      "input_params": [
        {
          "name": "identifier",
          "type": "String",
          "description": "Publicly traded company's stock symbol or Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_status",
          "type": "float",
          "description": "Response status"
        },
        {
          "name": "company_count",
          "type": "float",
          "description": "Number of filings returned"
        },
        {
          "name": "filings_name",
          "type": "str",
          "description": "Name of the report"
        },
        {
          "name": "filings_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filings_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filings_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q, 144)"
        },
        {
          "name": "filings_url",
          "type": "str",
          "description": "URL to the filing"
        },
        {
          "name": "filings_type",
          "type": "str",
          "description": "Type of data (e.g., filings)"
        },
        {
          "name": "filings_id",
          "type": "str",
          "description": "Unique identifier for the filing"
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Filings",
      "description": "Retrieve recent SEC filings for a publicly traded company based on stock symbol or Central Index Key (CIK).",
      "input_params": [
        {
          "name": "identifier",
          "type": "String",
          "description": "Publicly traded company's stock symbol or Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_status",
          "type": "float",
          "description": "Response status"
        },
        {
          "name": "company_count",
          "type": "float",
          "description": "Number of filings returned"
        },
        {
          "name": "filings_name",
          "type": "str",
          "description": "Name of the report"
        },
        {
          "name": "filings_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filings_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filings_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q, 144)"
        },
        {
          "name": "filings_url",
          "type": "str",
          "description": "URL to the filing"
        },
        {
          "name": "filings_type",
          "type": "str",
          "description": "Type of data (e.g., filings)"
        },
        {
          "name": "filings_id",
          "type": "str",
          "description": "Unique identifier for the filing"
        }
      ]
    },
    {
      "name": "SEC_Balance_Sheet",
      "description": "Retrieve the balance sheet of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "ticker",
          "type": "String",
          "description": "Publicly traded company's stock symbol",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "formtype",
          "type": "String",
          "description": "10-K = Annual Report (default) | 10-Q = Quarterly Report",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "filingorder",
          "type": "Number",
          "description": "Retrieve an older financial statement by specifying number of filings to go back. By default, the most recent filing is returned (filingOrder = 0).",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_name",
          "type": "str",
          "description": "Name of the filing"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_period",
          "type": "str",
          "description": "Reporting period"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (10-K or 10-Q)"
        },
        {
          "name": "filing_filingCount",
          "type": "float",
          "description": "Number of filings"
        },
        {
          "name": "result_CashAndCashEquivalentsAtCarryingValue",
          "type": "float",
          "description": "Value of cash and cash equivalents"
        },
        {
          "name": "result_ShortTermInvestments",
          "type": "float",
          "description": "Value of short-term investments"
        },
        {
          "name": "result_AccountsReceivableNetCurrent",
          "type": "float",
          "description": "Net value of current accounts receivable"
        },
        {
          "name": "result_InventoryNet",
          "type": "float",
          "description": "Net value of inventory"
        },
        {
          "name": "result_LongTermInvestments",
          "type": "float",
          "description": "Value of long-term investments"
        },
        {
          "name": "result_Goodwill",
          "type": "float",
          "description": "Value of goodwill"
        },
        {
          "name": "result_Assets",
          "type": "float",
          "description": "Total value of assets"
        },
        {
          "name": "result_AccountsPayableCurrent",
          "type": "float",
          "description": "Value of current accounts payable"
        },
        {
          "name": "result_LongTermDebtCurrent",
          "type": "float",
          "description": "Value of current long-term debt"
        },
        {
          "name": "result_Liabilities",
          "type": "float",
          "description": "Total value of liabilities"
        }
      ]
    }
  ],
  [
    {
      "name": "SEC_Filings",
      "description": "Retrieve recent SEC filings for a publicly traded company based on stock symbol or Central Index Key (CIK).",
      "input_params": [
        {
          "name": "identifier",
          "type": "String",
          "description": "Publicly traded company's stock symbol or Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_status",
          "type": "float",
          "description": "Response status"
        },
        {
          "name": "company_count",
          "type": "float",
          "description": "Number of filings returned"
        },
        {
          "name": "filings_name",
          "type": "str",
          "description": "Name of the report"
        },
        {
          "name": "filings_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filings_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filings_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q, 144)"
        },
        {
          "name": "filings_url",
          "type": "str",
          "description": "URL to the filing"
        },
        {
          "name": "filings_type",
          "type": "str",
          "description": "Type of data (e.g., filings)"
        },
        {
          "name": "filings_id",
          "type": "str",
          "description": "Unique identifier for the filing"
        }
      ]
    },
    {
      "name": "SEC_Financial_Statements_and_Disclosures",
      "description": "Retrieve financial statements and disclosures of a publicly traded company from SEC filings.",
      "input_params": [
        {
          "name": "cik",
          "type": "String",
          "description": "Central Index Key (CIK)",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "accessionNumber",
          "type": "String",
          "description": "SEC Filing Identifier",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "company_name",
          "type": "str",
          "description": "Name of the company"
        },
        {
          "name": "company_cik",
          "type": "str",
          "description": "Central Index Key (CIK)"
        },
        {
          "name": "company_ticker",
          "type": "str",
          "description": "Stock ticker symbol"
        },
        {
          "name": "filing_accessionNumber",
          "type": "str",
          "description": "Accession number of the filing"
        },
        {
          "name": "filing_filingDate",
          "type": "str",
          "description": "Date of the filing"
        },
        {
          "name": "filing_formType",
          "type": "str",
          "description": "Type of form (e.g., 10-K, 10-Q)"
        },
        {
          "name": "filing_count",
          "type": "float",
          "description": "Number of sections in the filing"
        },
        {
          "name": "result_Id",
          "type": "str",
          "description": "Unique identifier for the section"
        },
        {
          "name": "result_HtmlFileName",
          "type": "str",
          "description": "HTML file name of the section"
        },
        {
          "name": "result_Url",
          "type": "str",
          "description": "URL to the section"
        },
        {
          "name": "result_Section",
          "type": "str",
          "description": "Type of section (e.g., Statement, Note)"
        },
        {
          "name": "result_Name",
          "type": "str",
          "description": "Name of the section (e.g., Consolidated Balance Sheets)"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperFlightSearch",
      "description": "Retrieves available flights for a given route using Skyscrapper API.",
      "input_params": [
        {
          "name": "originSkyId",
          "type": "string",
          "description": "The originSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationSkyId",
          "type": "string",
          "description": "The destinationSkyId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "originEntityId",
          "type": "string",
          "description": "The originEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "destinationEntityId",
          "type": "string",
          "description": "The destinationEntityId code can be extracted from the Search Airport API in the Flights collection.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "date",
          "type": "string",
          "description": "Departure or travel date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "returnDate",
          "type": "string",
          "description": "Return date. Format: YYYY-MM-DD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cabinClass",
          "type": "string",
          "description": "Cabin class. Default value: economy",
          "required": false,
          "enum": [
            "economy",
            "premium_economy",
            "business",
            "first"
          ],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Adults: 12+ years. Default value: 1",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "children",
          "type": "number",
          "description": "Children: 2-12 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "infants",
          "type": "number",
          "description": "Infants: Under 2 years. Default value: 0",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "Sort By. Default value: best",
          "required": false,
          "enum": [],
          "allowed_values": [
            "best",
            "price_high",
            "cheapest",
            "fastest",
            "outbound_take_off_time",
            "outbound_landing_time",
            "return_take_off_time",
            "return_landing_time"
          ]
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Set a limit on the amount of records. Example: 100",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "carriersIds",
          "type": "string",
          "description": "Filter the flight itinerary data by the carrier. Comma-separated format for multiple carriers. Example: -32672,-31435",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currency",
          "type": "string",
          "description": "Currency code. Default value: USD",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "market",
          "type": "string",
          "description": "Market code. Default value: en-US",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "countryCode",
          "type": "string",
          "description": "Country code. Default value: US",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "flightId",
          "type": "str",
          "description": "The unique identifier of the flight."
        },
        {
          "name": "isSelfTransfer",
          "type": "bool",
          "description": "Indicates whether the flight is a self-transfer flight."
        },
        {
          "name": "isMashUp",
          "type": "bool",
          "description": "Indicates whether the flight is a mash-up flight."
        },
        {
          "name": "hasFlexibleOptions",
          "type": "bool",
          "description": "Indicates whether the flight has flexible options."
        },
        {
          "name": "score",
          "type": "float",
          "description": "The score of the flight."
        },
        {
          "name": "minPrice",
          "type": "float",
          "description": "The minimum price of the flight."
        },
        {
          "name": "maxPrice",
          "type": "float",
          "description": "The maximum price of the flight."
        },
        {
          "name": "multiCityMinPrice",
          "type": "float",
          "description": "The minimum price of the multi-city flight."
        },
        {
          "name": "multiCityMaxPrice",
          "type": "float",
          "description": "The maximum price of the multi-city flight."
        },
        {
          "name": "originCity",
          "type": "str",
          "description": "The origin city of the flight."
        },
        {
          "name": "originAirportId",
          "type": "str",
          "description": "The unique identifier of the origin airport."
        },
        {
          "name": "originAirportName",
          "type": "str",
          "description": "The name of the origin airport."
        },
        {
          "name": "destinationCity",
          "type": "str",
          "description": "The destination city of the flight."
        },
        {
          "name": "destinationAirportId",
          "type": "str",
          "description": "The unique identifier of the destination airport."
        },
        {
          "name": "destinationAirportName",
          "type": "str",
          "description": "The name of the destination airport."
        },
        {
          "name": "carrierId",
          "type": "str",
          "description": "The unique identifier of the carrier."
        },
        {
          "name": "carrierName",
          "type": "str",
          "description": "The name of the carrier."
        },
        {
          "name": "formattedPrice",
          "type": "str",
          "description": "The formatted price of the flight."
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "LocalBusinessData",
      "description": "Search for businesses based on specified criteria.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query or keyword.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lat",
          "type": "number",
          "description": "Latitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lng",
          "type": "number",
          "description": "Longitude of the coordinates point for biased results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "zoom",
          "type": "string",
          "description": "Zoom level for the search viewport determined by lat, lng.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language of the results (ISO 639-1 code).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region or country code to query Google Maps.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "verified",
          "type": "boolean",
          "description": "Filter only verified businesses.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "business_status",
          "type": "string",
          "description": "Business status to filter (comma-separated values: OPEN, CLOSED_TEMPORARILY, CLOSED).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "extract_emails_and_contacts",
          "type": "boolean",
          "description": "Extract emails, contacts, and social profiles for each business in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "fields",
          "type": "string",
          "description": "Comma-separated list of business fields to include in the response.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "business_id",
          "type": "str",
          "description": "Unique ID of the business."
        },
        {
          "name": "google_id",
          "type": "str",
          "description": "Google ID of the business."
        },
        {
          "name": "place_id",
          "type": "str",
          "description": "Place ID of the business."
        },
        {
          "name": "phone_number",
          "type": "str",
          "description": "Phone number of the business."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the business."
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "Latitude of the business location."
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "Longitude of the business location."
        },
        {
          "name": "full_address",
          "type": "str",
          "description": "Full address of the business."
        },
        {
          "name": "review_count",
          "type": "float",
          "description": "Number of reviews for the business."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the business."
        },
        {
          "name": "timezone",
          "type": "str",
          "description": "Timezone of the business location."
        },
        {
          "name": "opening_status",
          "type": "str",
          "description": "Opening status of the business."
        },
        {
          "name": "website",
          "type": "str",
          "description": "Website URL of the business."
        },
        {
          "name": "place_link",
          "type": "str",
          "description": "Google Maps link to the business."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type/category of the business."
        },
        {
          "name": "price_level",
          "type": "float",
          "description": "Price level of the business."
        },
        {
          "name": "city",
          "type": "str",
          "description": "City where the business is located."
        },
        {
          "name": "zipcode",
          "type": "str",
          "description": "ZIP code of the business location."
        },
        {
          "name": "state",
          "type": "str",
          "description": "State or region where the business is located."
        },
        {
          "name": "country",
          "type": "str",
          "description": "Country where the business is located."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "LocalBusinessDataBusinessReviews",
      "description": "Search for businesses reviews based on specified criteria.",
      "input_params": [
        {
          "name": "business_id",
          "type": "string",
          "description": "Search business ID",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "number",
          "description": "Maximum number of businesses reviews to return (1-500).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "number",
          "description": "Number of business reviews to skip (for pagination/scrolling).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "query",
          "type": "string",
          "description": "Return reviews matching a text query.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sortBy",
          "type": "string",
          "description": "How to sort the reviews in the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "most_relevant",
            "newest",
            "highest_ranking",
            "lowest_ranking",
            "do not include in request"
          ]
        },
        {
          "name": "fields",
          "type": "string",
          "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Query Google Maps from a particular region or country.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set the language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "review_id",
          "type": "str",
          "description": "The ID of the review."
        },
        {
          "name": "review_text",
          "type": "str",
          "description": "The text of the review."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "The rating of the review (1-5)."
        },
        {
          "name": "review_datetime_utc",
          "type": "str",
          "description": "The date and time the review was posted, in UTC."
        },
        {
          "name": "review_timestamp",
          "type": "float",
          "description": "The timestamp of the review (in seconds since the Unix epoch)."
        },
        {
          "name": "review_link",
          "type": "str",
          "description": "The URL of the review."
        },
        {
          "name": "review_language",
          "type": "str",
          "description": "The language of the review."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "The number of likes the review has received."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "The ID of the author of the review."
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "The name of the author of the review."
        },
        {
          "name": "author_review_count",
          "type": "float",
          "description": "The number of reviews the author has written."
        },
        {
          "name": "owner_response_datetime_utc",
          "type": "str",
          "description": "The date and time the owner responded to the review, in UTC."
        },
        {
          "name": "owner_response_timestamp",
          "type": "str",
          "description": "The timestamp of the owner's response (in seconds since the Unix epoch)."
        },
        {
          "name": "owner_response_text",
          "type": "str",
          "description": "The text of the owner's response."
        },
        {
          "name": "owner_response_language",
          "type": "str",
          "description": "The language of the owner's response."
        },
        {
          "name": "author_reviews_link",
          "type": "str",
          "description": "The URL of the author's reviews."
        },
        {
          "name": "service_quality",
          "type": "str",
          "description": "The service quality of the review (e.g. 'excellent', 'good', 'average', 'poor', 'terrible')."
        },
        {
          "name": "review_form",
          "type": "str",
          "description": "The form of the review (e.g. 'full', 'short', 'suggest an edit')."
        },
        {
          "name": "review_source",
          "type": "str",
          "description": "The source of the review (e.g. 'google', 'tripadvisor', 'yelp')."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "SkyScrapperSearchAirport",
      "description": "Search for airports using a location name.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Name of the location where the airport is situated.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "skyId",
          "type": "str",
          "description": "The unique identifier for the city used in flight searches.",
          "required": false
        },
        {
          "name": "entityId",
          "type": "str",
          "description": "The internal unique ID of the city.",
          "required": false
        },
        {
          "name": "presentation_title",
          "type": "str",
          "description": "The main display name of the city.",
          "required": false
        },
        {
          "name": "presentation_suggestionTitle",
          "type": "str",
          "description": "The suggested name shown for the city in search results.",
          "required": false
        },
        {
          "name": "presentation_subtitle",
          "type": "str",
          "description": "The country or region where the city is located.",
          "required": false
        },
        {
          "name": "navigation_entityId",
          "type": "str",
          "description": "The unique ID of the city used for navigation purposes.",
          "required": false
        },
        {
          "name": "navigation_entityType",
          "type": "str",
          "description": "The type of entity; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_localizedName",
          "type": "str",
          "description": "The localized (human-readable) name of the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_skyId",
          "type": "str",
          "description": "The flight-related identifier for the city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in flight-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_flightPlaceType",
          "type": "str",
          "description": "The type of place for flight searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantFlightParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in flight-related contexts.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityId",
          "type": "str",
          "description": "The city's internal ID used in hotel-related queries.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_entityType",
          "type": "str",
          "description": "The type of entity for hotel searches; in this case, it is a city.",
          "required": false
        },
        {
          "name": "navigation_relevantHotelParams_localizedName",
          "type": "str",
          "description": "The localized name of the city used in hotel-related contexts.",
          "required": false
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "TripadvisorSearchHotels",
      "description": "Retrieves available hotels in a given location using Tripadvisor API.",
      "input_params": [
        {
          "name": "geoId",
          "type": "string",
          "description": "Geo ID of the location retrieved from the Search Location API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkIn",
          "type": "string",
          "description": "Check-in date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "checkOut",
          "type": "string",
          "description": "Check-out date. Format: YYYY-MM-DD",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pageNumber",
          "type": "number",
          "description": "Page number. The default page number is 1.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "sort",
          "type": "string",
          "description": "Sort order for results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "adults",
          "type": "number",
          "description": "Number of adults.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rooms",
          "type": "number",
          "description": "Number of rooms.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "childrenAges",
          "type": "array[int]",
          "description": "Ages of children.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "string",
          "description": "Currency code.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "healthSafety",
          "type": "array[str]",
          "description": "Health and safety filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "deals",
          "type": "array[str]",
          "description": "Deal filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "array[str]",
          "description": "Type filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "amenity",
          "type": "array[str]",
          "description": "Amenity filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "neighborhood",
          "type": "array[str]",
          "description": "Neighborhood filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "rating",
          "type": "number",
          "description": "Minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "class",
          "type": "array[str]",
          "description": "Class filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "style",
          "type": "array[str]",
          "description": "Style filters.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "distFrom",
          "type": "string",
          "description": "Distance from a location.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Hotel ID"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Hotel name"
        },
        {
          "name": "primaryInfo",
          "type": "str",
          "description": "Hotel address"
        },
        {
          "name": "secondaryInfo",
          "type": "str",
          "description": "Hotel city"
        },
        {
          "name": "bubbleRating_count",
          "type": "str",
          "description": "Number of ratings"
        },
        {
          "name": "bubbleRating_rating",
          "type": "float",
          "description": "Average rating of the hotel"
        },
        {
          "name": "isSponsored",
          "type": "bool",
          "description": "Is sponsored"
        },
        {
          "name": "accentedLabel",
          "type": "bool",
          "description": "Accented label"
        },
        {
          "name": "provider",
          "type": "str",
          "description": "Provider"
        },
        {
          "name": "priceForDisplay",
          "type": "str",
          "description": "Price for display"
        },
        {
          "name": "strikethroughPrice",
          "type": "str",
          "description": "Strikethrough price"
        },
        {
          "name": "priceDetails",
          "type": "str",
          "description": "Price details"
        },
        {
          "name": "priceSummary",
          "type": "str",
          "description": "Price summary"
        },
        {
          "name": "commerceInfo_externalUrl",
          "type": "str",
          "description": "Commerce info external URL"
        },
        {
          "name": "details_text",
          "type": "str",
          "description": "Details text"
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "RedditTopPostsBySubreddit",
      "description": "Returns the top subreddit posts.",
      "input_params": [
        {
          "name": "subreddit",
          "type": "String",
          "description": "The subreddit for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "time",
          "type": "String",
          "description": "The time period for which to fetch top posts.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "cursor",
          "type": "String",
          "description": "A cursor for pagination.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "The id of the post."
        },
        {
          "name": "numComments",
          "type": "int",
          "description": "The number of comments on the post."
        },
        {
          "name": "created",
          "type": "int",
          "description": "The time the post was created."
        },
        {
          "name": "score",
          "type": "int",
          "description": "The score of the post."
        },
        {
          "name": "isLocked",
          "type": "bool",
          "description": "Whether the post is locked."
        },
        {
          "name": "title",
          "type": "str",
          "description": "The title of the post."
        },
        {
          "name": "author",
          "type": "str",
          "description": "The author of the post."
        },
        {
          "name": "authorId",
          "type": "str",
          "description": "The id of the author of the post."
        },
        {
          "name": "domain",
          "type": "str",
          "description": "The domain of the post."
        },
        {
          "name": "numDuplicates",
          "type": "int",
          "description": "The number of duplicate posts."
        },
        {
          "name": "viewCount",
          "type": "int",
          "description": "The number of views the post has."
        },
        {
          "name": "goldCount",
          "type": "int",
          "description": "The number of gold awards the post has."
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Whether the post is hidden."
        },
        {
          "name": "saved",
          "type": "bool",
          "description": "Whether the post is saved."
        },
        {
          "name": "sendReplies",
          "type": "bool",
          "description": "Whether replies can be sent to the post."
        },
        {
          "name": "impressionId",
          "type": "str",
          "description": "The impression id of the post."
        },
        {
          "name": "subcaption",
          "type": "str",
          "description": "The subcaption of the post."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Real-Time_Product_Search_Product_Details",
      "description": "Retrieves real-time product details based on search queries.",
      "input_params": [
        {
          "name": "product_id",
          "type": "String",
          "description": "Product id of the product for which to get full details.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Search_Quotes_By_Keyword",
      "description": "Searches for quotes based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up quotes.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the author's image."
        },
        {
          "name": "quoteText",
          "type": "str",
          "description": "Text of the quote."
        },
        {
          "name": "urls",
          "type": "str",
          "description": "URL of the book containing the quote."
        },
        {
          "name": "likes",
          "type": "str",
          "description": "Number of likes the quote has received."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Search_Quotes_By_Keyword",
      "description": "Searches for quotes based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up quotes.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the author's image."
        },
        {
          "name": "quoteText",
          "type": "str",
          "description": "Text of the quote."
        },
        {
          "name": "urls",
          "type": "str",
          "description": "URL of the book containing the quote."
        },
        {
          "name": "likes",
          "type": "str",
          "description": "Number of likes the quote has received."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Goodreads_Get_Authors_Books",
      "description": "Retrieves books authored by a specific author.",
      "input_params": [
        {
          "name": "authorID",
          "type": "String",
          "description": "ID of the author whose books are to be retrieved. Can be obtained through other endpoints.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Quotes_By_Keyword",
      "description": "Searches for quotes based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up quotes.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the author's image."
        },
        {
          "name": "quoteText",
          "type": "str",
          "description": "Text of the quote."
        },
        {
          "name": "urls",
          "type": "str",
          "description": "URL of the book containing the quote."
        },
        {
          "name": "likes",
          "type": "str",
          "description": "Number of likes the quote has received."
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "TripadvisorSearchLocation",
      "description": "Search for locations using a query string.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for location (e.g., city name)",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "geoId",
          "type": "str",
          "description": "The unique identifier for the location"
        },
        {
          "name": "name",
          "type": "str",
          "description": "The name of the location"
        },
        {
          "name": "type",
          "type": "str",
          "description": "The type of location (e.g., city, region, country)"
        },
        {
          "name": "latitude",
          "type": "float",
          "description": "The latitude of the location"
        },
        {
          "name": "longitude",
          "type": "float",
          "description": "The longitude of the location"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetNews",
      "description": "Retrieve COVID-19 news for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus news in France; use 'US' for coronavirus news in US; use 'US-CA' for coronavirus news in the US California state. Use 'global' to retrieve global news.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location.",
          "required": false
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region.",
          "required": false
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable.",
          "required": false
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable.",
          "required": false
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location.",
          "required": false
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location.",
          "required": false
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the news was last updated.",
          "required": false
        },
        {
          "name": "news_path",
          "type": "str",
          "description": "Path to the news article.",
          "required": false
        },
        {
          "name": "news_title",
          "type": "str",
          "description": "Title of the news article.",
          "required": false
        },
        {
          "name": "news_excerpt",
          "type": "str",
          "description": "Excerpt from the news article.",
          "required": false
        },
        {
          "name": "news_sourceUrl",
          "type": "str",
          "description": "Source URL of the news article, if available.",
          "required": false
        },
        {
          "name": "news_webUrl",
          "type": "str",
          "description": "Web URL of the news article.",
          "required": false
        },
        {
          "name": "news_originalUrl",
          "type": "str",
          "description": "Original URL of the news article.",
          "required": false
        },
        {
          "name": "news_featuredContent",
          "type": "str",
          "description": "Featured content, if available.",
          "required": false
        },
        {
          "name": "news_highlight",
          "type": "str",
          "description": "Highlighted content, if available.",
          "required": false
        },
        {
          "name": "news_heat",
          "type": "float",
          "description": "Heat score of the news article.",
          "required": false
        },
        {
          "name": "news_content",
          "type": "str",
          "description": "Content of the news article.",
          "required": false
        },
        {
          "name": "news_type",
          "type": "str",
          "description": "Type of the news article.",
          "required": false
        },
        {
          "name": "news_publishedDateTime",
          "type": "str",
          "description": "Date and time when the news article was published.",
          "required": false
        },
        {
          "name": "news_updatedDateTime",
          "type": "str",
          "description": "Date and time when the news article was last updated.",
          "required": false
        }
      ]
    }
  ],
  [
    {
      "name": "Tripadvisor_Get_Restaurant_Details",
      "description": "Retrieve details of a restaurant using its restaurantsId and optionally specify currencyCode.",
      "input_params": [
        {
          "name": "restaurantsId",
          "type": "String",
          "description": "restaurantsId obtained from Tripadvisor's Search Restaurants API.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "currencyCode",
          "type": "String",
          "description": "Currency code obtained from Get Currency API in Configs collection.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_address",
          "type": "str",
          "description": "Address of the restaurant."
        },
        {
          "name": "location_geoPoint_latitude",
          "type": "float",
          "description": "Latitude of the restaurant."
        },
        {
          "name": "location_geoPoint_longitude",
          "type": "float",
          "description": "Longitude of the restaurant."
        },
        {
          "name": "location_neighborhood_name",
          "type": "str",
          "description": "Name of the neighborhood where the restaurant is located."
        },
        {
          "name": "open_day",
          "type": "str",
          "description": "Dates when the restaurant is open."
        },
        {
          "name": "open_hours",
          "type": "str",
          "description": "Hours when the restaurant is open."
        },
        {
          "name": "openStatus",
          "type": "str",
          "description": "Status of the business (e.g., OPEN, CLOSED)."
        },
        {
          "name": "ownerStatus",
          "type": "str",
          "description": "Status of the owner (e.g., VERIFIED)."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the restaurant."
        },
        {
          "name": "rating",
          "type": "float",
          "description": "Rating of the restaurant."
        },
        {
          "name": "numberReviews",
          "type": "float",
          "description": "Number of reviews for the restaurant."
        },
        {
          "name": "contactLinks",
          "type": "str",
          "description": "Contact links for the restaurant."
        }
      ]
    },
    {
      "name": "Coronavirus_Smartable_GetStats",
      "description": "Retrieve COVID-19 statistics for a specific location.",
      "input_params": [
        {
          "name": "location",
          "type": "String",
          "description": "ISO 3166-2 location code. For example, use 'FR' for coronavirus stats in France; use 'US' for coronavirus stats in US; use 'US-CA' for coronavirus stats in the US California state. Use 'global' to retrieve global stats.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_long",
          "type": "float",
          "description": "Longitude of the location."
        },
        {
          "name": "location_countryOrRegion",
          "type": "str",
          "description": "Name of the country or region."
        },
        {
          "name": "location_provinceOrState",
          "type": "str",
          "description": "Name of the province or state, if applicable."
        },
        {
          "name": "location_county",
          "type": "str",
          "description": "Name of the county, if applicable."
        },
        {
          "name": "location_isoCode",
          "type": "str",
          "description": "ISO code of the location."
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location."
        },
        {
          "name": "location_updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "updatedDateTime",
          "type": "str",
          "description": "Date and time when the statistics were last updated."
        },
        {
          "name": "stats_totalConfirmedCases",
          "type": "float",
          "description": "Total number of confirmed COVID-19 cases."
        },
        {
          "name": "stats_newlyConfirmedCases",
          "type": "float",
          "description": "Number of newly confirmed COVID-19 cases."
        },
        {
          "name": "stats_totalDeaths",
          "type": "float",
          "description": "Total number of deaths due to COVID-19."
        },
        {
          "name": "stats_newDeaths",
          "type": "float",
          "description": "Number of new deaths due to COVID-19."
        },
        {
          "name": "stats_totalRecoveredCases",
          "type": "float",
          "description": "Total number of recovered COVID-19 cases."
        },
        {
          "name": "stats_newlyRecoveredCases",
          "type": "float",
          "description": "Number of newly recovered COVID-19 cases."
        },
        {
          "name": "history_dates",
          "type": "str",
          "description": "Dates for which historical data is available."
        },
        {
          "name": "history_deaths",
          "type": "int",
          "description": "Number of deaths on each historical date."
        },
        {
          "name": "history_confirmed",
          "type": "int",
          "description": "Number of confirmed cases on each historical date."
        },
        {
          "name": "history_recovered",
          "type": "int",
          "description": "Number of recovered cases on each historical date."
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Realtime_Weather_Api",
      "description": "Fetch real-time weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "current_temp_c",
          "type": "float",
          "description": "Current temperature in Celsius"
        },
        {
          "name": "current_temp_f",
          "type": "float",
          "description": "Current temperature in Fahrenheit"
        },
        {
          "name": "current_wind_mph",
          "type": "float",
          "description": "Current wind speed in miles per hour"
        },
        {
          "name": "current_wind_kph",
          "type": "float",
          "description": "Current wind speed in kilometers per hour"
        },
        {
          "name": "current_cloud",
          "type": "float",
          "description": "Current cloud cover percentage"
        },
        {
          "name": "current_humidity",
          "type": "float",
          "description": "Current humidity percentage"
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Time_Zone_API",
      "description": "Fetch time zone information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        }
      ]
    }
  ],
  [
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    },
    {
      "name": "WeatherAPI.com_Forecast_Weather_API",
      "description": "Fetch forecast weather information based on various query parameters.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Query parameter based on which data is sent back. It could be one of the following: Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508, city name e.g.: q=Paris, US zip e.g: q=10001, UK postcode e.g: q=SW1, Canada postal code e.g: q=G2J, metar:<metar_code> e.g: q=metar:EGLL, iata:<3 digit airport code> e.g: q=iata:DXB, auto:ip for IP lookup, IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "days",
          "type": "Number",
          "description": "Number of days of forecast required (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "lang",
          "type": "String",
          "description": "Returns 'condition:text' field in API in the desired language (optional)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "dt",
          "type": "Date (yyyy-mm-dd)",
          "description": "Specific date for the forecast (optional). It should be between today and the next 10 days in yyyy-MM-dd format.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location"
        },
        {
          "name": "location_region",
          "type": "str",
          "description": "Region of the location"
        },
        {
          "name": "location_country",
          "type": "str",
          "description": "Country of the location"
        },
        {
          "name": "location_lat",
          "type": "float",
          "description": "Latitude of the location"
        },
        {
          "name": "location_lon",
          "type": "float",
          "description": "Longitude of the location"
        },
        {
          "name": "location_tz_id",
          "type": "str",
          "description": "Time zone ID"
        },
        {
          "name": "location_localtime_epoch",
          "type": "float",
          "description": "Local time in epoch format"
        },
        {
          "name": "location_localtime",
          "type": "str",
          "description": "Local time"
        },
        {
          "name": "forecast_date",
          "type": "str",
          "description": "Date of the forecast"
        },
        {
          "name": "forecast_day_maxtemp_c",
          "type": "float",
          "description": "Maximum temperature of the day in Celsius"
        },
        {
          "name": "forecast_day_maxtemp_f",
          "type": "float",
          "description": "Maximum temperature of the day in Fahrenheit"
        },
        {
          "name": "forecast_day_mintemp_c",
          "type": "float",
          "description": "Minimum temperature of the day in Celsius"
        },
        {
          "name": "forecase_day_mintemp_f",
          "type": "float",
          "description": "Minimum temperature of the day in Fahrenheit"
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_Get_Artist_Overview",
      "description": "Retrieve an overview of an artist from Spotify based on the artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve the overview.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "status",
          "type": "bool",
          "description": "Indicates the success or failure of the request."
        },
        {
          "name": "errorId",
          "type": "str",
          "description": "String identifier for any error encountered, if applicable."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify artist page."
        },
        {
          "name": "verified",
          "type": "bool",
          "description": "Indicates if the artist is verified on Spotify."
        },
        {
          "name": "biography",
          "type": "str",
          "description": "Biography of the artist."
        },
        {
          "name": "stats_followers",
          "type": "float",
          "description": "Number of followers of the artist."
        },
        {
          "name": "stats_monthlyListeners",
          "type": "float",
          "description": "Number of monthly listeners of the artist."
        },
        {
          "name": "stats_worldRank",
          "type": "float",
          "description": "World rank of the artist."
        },
        {
          "name": "externalLinks_url",
          "type": "str",
          "description": "External URL liked to the artist."
        },
        {
          "name": "playlist_id",
          "type": "float",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "playlist_name",
          "type": "str",
          "description": "A playlist id featuring songs by the artist."
        },
        {
          "name": "concerts_count",
          "type": "float",
          "description": "Number of concerts by the artist."
        }
      ]
    },
    {
      "name": "Goodreads_Search_Book_By_Keyword",
      "description": "Searches for books based on a specified keyword.",
      "input_params": [
        {
          "name": "keyword",
          "type": "String",
          "description": "Search term or keyword to look up books.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "page",
          "type": "String",
          "description": "Optional. Page number for paginated results.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "imageUrl",
          "type": "str",
          "description": "URL of the book cover image."
        },
        {
          "name": "bookId",
          "type": "str",
          "description": "ID of the book."
        },
        {
          "name": "workId",
          "type": "str",
          "description": "ID of the work associated with the book."
        },
        {
          "name": "bookUrl",
          "type": "str",
          "description": "URL of the book's page on the website."
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the book."
        },
        {
          "name": "author_id",
          "type": "str",
          "description": "author id"
        },
        {
          "name": "author_name",
          "type": "str",
          "description": "author name"
        },
        {
          "name": "rank",
          "type": "str",
          "description": "Ranking of the book."
        },
        {
          "name": "rating",
          "type": "str",
          "description": "Average rating of the book."
        },
        {
          "name": "totalRatings",
          "type": "str",
          "description": "Total number of ratings the book has received."
        },
        {
          "name": "publishedYear",
          "type": "str",
          "description": "Year the book was published."
        },
        {
          "name": "totalEditions",
          "type": "str",
          "description": "Total number of editions available."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Artist_Albums_Singles",
      "description": "Retrieve albums or singles released by an artist on Spotify.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve albums or singles.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "Enum",
          "description": "Type of release to retrieve. Defaults to 'album'. Use 'album' or 'single'. Note: 'appearsOn' type does not support pagination scraping.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "Number",
          "description": "Number of items to omit before returning results. Ignored if type is 'appearsOn'. Defaults to 0.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Max number of items to return per request. Ignored if type is 'appearsOn'. Defaults to 50.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the album or single."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the album or single."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of release, e.g., 'album'."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify album or single."
        },
        {
          "name": "date",
          "type": "str",
          "description": "Release date of the album or single in ISO 8601 format."
        },
        {
          "name": "trackCount",
          "type": "float",
          "description": "Number of tracks in the album. Null if type is 'single'."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Artist_Albums_Singles",
      "description": "Retrieve albums or singles released by an artist on Spotify.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique Spotify ID of the artist for which to retrieve albums or singles.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "type",
          "type": "Enum",
          "description": "Type of release to retrieve. Defaults to 'album'. Use 'album' or 'single'. Note: 'appearsOn' type does not support pagination scraping.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "offset",
          "type": "Number",
          "description": "Number of items to omit before returning results. Ignored if type is 'appearsOn'. Defaults to 0.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Max number of items to return per request. Ignored if type is 'appearsOn'. Defaults to 50.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "id",
          "type": "str",
          "description": "Unique Spotify ID of the album or single."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the album or single."
        },
        {
          "name": "type",
          "type": "str",
          "description": "Type of release, e.g., 'album'."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to the Spotify album or single."
        },
        {
          "name": "date",
          "type": "str",
          "description": "Release date of the album or single in ISO 8601 format."
        },
        {
          "name": "trackCount",
          "type": "float",
          "description": "Number of tracks in the album. Null if type is 'single'."
        }
      ]
    },
    {
      "name": "Real-Time_Product_Search_Search",
      "description": "API to retrieve real-time product details, offers, and reviews from Amazon based on specific queries.",
      "input_params": [
        {
          "name": "q",
          "type": "String",
          "description": "Search query or keyword.",
          "required": true,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "country",
          "type": "String",
          "description": "Country code of the region/country to return results for.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "us",
            "gb",
            "ca",
            "de",
            "fr"
          ]
        },
        {
          "name": "language",
          "type": "String",
          "description": "Language of the results.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "en",
            "fr",
            "de",
            "es",
            "it"
          ]
        },
        {
          "name": "page",
          "type": "Number",
          "description": "Results page to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "limit",
          "type": "Number",
          "description": "Maximum number of products to return.",
          "required": false,
          "enum": [],
          "allowed_values": "1-100"
        },
        {
          "name": "sort_by",
          "type": "Enum",
          "description": "Sort product offers by best match, top rated, lowest price, or highest price.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "BEST_MATCH",
            "TOP_RATED",
            "LOWEST_PRICE",
            "HIGHEST_PRICE"
          ]
        },
        {
          "name": "min_price",
          "type": "Number",
          "description": "Minimum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_price",
          "type": "Number",
          "description": "Maximum price filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "product_condition",
          "type": "Enum",
          "description": "Filter products by condition (ANY, NEW, USED, REFURBISHED).",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "NEW",
            "USED",
            "REFURBISHED"
          ]
        },
        {
          "name": "free_returns",
          "type": "Boolean",
          "description": "Filter product offers that offer free returns.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "free_shipping",
          "type": "Boolean",
          "description": "Filter product offers that offer free shipping/delivery.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "max_shipping_days",
          "type": "Number",
          "description": "Maximum shipping days filter for product offers.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "on_sale",
          "type": "Boolean",
          "description": "Filter product offers that are currently on sale.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "store_id",
          "type": "String",
          "description": "Filter product offers from specific stores (comma-separated list of store IDs).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "other_filters",
          "type": "String",
          "description": "Other dynamic filters (e.g., by Size, Color) separated by commas.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "min_rating",
          "type": "String",
          "description": "Filter products by minimum rating.",
          "required": false,
          "enum": [],
          "allowed_values": [
            "ANY",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      ],
      "output_params": [
        {
          "name": "product_id",
          "type": "float",
          "description": "The unique identifier of the product."
        },
        {
          "name": "product_title",
          "type": "str",
          "description": "The title of the product."
        },
        {
          "name": "product_description",
          "type": "str",
          "description": "The description of the product."
        },
        {
          "name": "product_photos",
          "type": "str",
          "description": "The URLs of the product photos."
        },
        {
          "name": "product_attributes",
          "type": "str",
          "description": "The attributes of the product (e.g., size, color, brand)."
        },
        {
          "name": "product_rating",
          "type": "float",
          "description": "The rating of the product (out of 5)."
        },
        {
          "name": "product_page_url",
          "type": "str",
          "description": "The URL of the product page on Amazon."
        },
        {
          "name": "product_offers_page_url",
          "type": "str",
          "description": "The URL of the product offers page on Amazon."
        },
        {
          "name": "product_specs_page_url",
          "type": "str",
          "description": "The URL of the product specifications page on Amazon."
        },
        {
          "name": "product_reviews_page_url",
          "type": "str",
          "description": "The URL of the product reviews page on Amazon."
        },
        {
          "name": "product_num_reviews",
          "type": "float",
          "description": "The number of reviews for the product."
        },
        {
          "name": "product_num_offers",
          "type": "str",
          "description": "The number of offers for the product."
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    },
    {
      "name": "NewsAPISearchByKeyWord",
      "description": "Search for news articles by topic using the NewsAPI.",
      "input_params": [
        {
          "name": "query",
          "type": "string",
          "description": "Search query for the topic (e.g., climate change)",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "language",
          "type": "string",
          "description": "Language for the search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "region",
          "type": "string",
          "description": "Region for the search results (e.g., 'US', 'GB', 'CA')",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "date",
          "type": "int",
          "description": "Publication date of the news article as a timestamp"
        },
        {
          "name": "domain",
          "type": "str",
          "description": "Domain of the news source"
        },
        {
          "name": "image",
          "type": "str",
          "description": "URL of the image associated with the news article"
        },
        {
          "name": "isVideo",
          "type": "bool",
          "description": "Indicates if the article is a video"
        },
        {
          "name": "link",
          "type": "str",
          "description": "URL of the news article"
        },
        {
          "name": "preview",
          "type": "str",
          "description": "Preview text of the news article"
        },
        {
          "name": "pubLogo",
          "type": "str",
          "description": "URL of the publisher's logo"
        },
        {
          "name": "publisher",
          "type": "str",
          "description": "Name of the news publisher"
        },
        {
          "name": "title",
          "type": "str",
          "description": "Title of the news article"
        }
      ]
    }
  ],
  [
    {
      "name": "Spotify_Scraper_List_Related_Artists",
      "description": "Retrieve a list of related artists based on the provided Artist ID.",
      "input_params": [
        {
          "name": "artistId",
          "type": "String",
          "description": "Unique identifier of the artist.",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "type",
          "type": "str",
          "description": "Type of the artist (e.g., 'artist')."
        },
        {
          "name": "id",
          "type": "str",
          "description": "Unique identifier of the artist."
        },
        {
          "name": "name",
          "type": "str",
          "description": "Name of the artist."
        },
        {
          "name": "shareUrl",
          "type": "str",
          "description": "URL to open the artist in Spotify."
        }
      ]
    },
    {
      "name": "Instagram_Search_User",
      "description": "Retrieve the list of accounts with the user name on Instagram.",
      "input_params": [
        {
          "name": "search_query",
          "type": "String",
          "description": "Insert the name of an Instagram user.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the user."
        },
        {
          "name": "is_private",
          "type": "bool",
          "description": "Indicates if the user is private."
        },
        {
          "name": "is_verified",
          "type": "bool",
          "description": "Indicates if the user is verified."
        },
        {
          "name": "profile_pic_url",
          "type": "str",
          "description": "URL link to the profile picture."
        },
        {
          "name": "profile_pic_url_hd",
          "type": "str",
          "description": "URL link to the profile picture in high definition."
        },
        {
          "name": "username",
          "type": "str",
          "description": "Username of the user."
        }
      ]
    }
  ],
  [
    {
      "name": "Instagram_Posts_Reels",
      "description": "Retrieve the list of posts and reels for an Instagram user.",
      "input_params": [
        {
          "name": "username_or_id_or_url",
          "type": "String",
          "description": "Insert a username (e.g. mrbeast), user id (e.g. 2278169415) or URL (e.g. instagram.com/mrbeast).",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "pagination_token",
          "type": "String",
          "description": "Use the value from the previous request to retrieve the continuation of the list. Leave empty in the first request. For more help, check our tutorials.",
          "required": false,
          "enum": [],
          "allowed_values": []
        },
        {
          "name": "url_embed_safe",
          "type": "Boolean",
          "description": "If you need to embed images/videos on your website, set to 'true' to evade CORS restrictions. URLs are valid from 6 to 24 hours. Default: false.",
          "required": false,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "code",
          "type": "str",
          "description": "Unique code for the post."
        },
        {
          "name": "id",
          "type": "str",
          "description": "ID of the post."
        },
        {
          "name": "is_video",
          "type": "bool",
          "description": "Indicates if the post is a video."
        },
        {
          "name": "like_count",
          "type": "float",
          "description": "Number of likes on the post."
        },
        {
          "name": "lng",
          "type": "float",
          "description": "Longitude coordinates of the location."
        },
        {
          "name": "location_name",
          "type": "str",
          "description": "Name of the location."
        },
        {
          "name": "media_name",
          "type": "str",
          "description": "Name of the media item."
        },
        {
          "name": "media_type",
          "type": "float",
          "description": "Type of media item."
        },
        {
          "name": "original_height",
          "type": "float",
          "description": "Original height of the media item."
        },
        {
          "name": "original_width",
          "type": "float",
          "description": "Original width of the media item."
        },
        {
          "name": "play_count",
          "type": "float",
          "description": "Number of plays of the item."
        },
        {
          "name": "comment_count",
          "type": "float",
          "description": "Number of comments on the post."
        },
        {
          "name": "product_type",
          "type": "str",
          "description": "Type of product in the post."
        },
        {
          "name": "share_count",
          "type": "float",
          "description": "Number of shares of the item."
        },
        {
          "name": "user_full_name",
          "type": "str",
          "description": "Full name of the user."
        },
        {
          "name": "video_codec",
          "type": "str",
          "description": "Video codec of video."
        },
        {
          "name": "video_url",
          "type": "str",
          "description": "URL link to the video."
        }
      ]
    },
    {
      "name": "Get_Country_Details_By_Country_Name",
      "description": "Retrieve details about a country based on Country Name",
      "input_params": [
        {
          "name": "name",
          "type": "String",
          "description": "Country Name",
          "required": true,
          "enum": [],
          "allowed_values": []
        }
      ],
      "output_params": [
        {
          "name": "name",
          "type": "str",
          "description": "Name of the country"
        },
        {
          "name": "short_name",
          "type": "str",
          "description": "Short-name of the country"
        },
        {
          "name": "dial_code",
          "type": "str",
          "description": "dial-code of the country"
        },
        {
          "name": "flag",
          "type": "str",
          "description": "Flag of the counrty"
        }
      ]
    }
  ]
]